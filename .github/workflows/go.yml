name: Go

on:
  push:
    branches:    
       - master 

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: sample-golang-eks

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: tag the build
      run: |
            BASE_STRING=`git describe --abbrev=0 --tags`
            BASE_STRING=${BASE_STRING/v/}
            BASE_LIST=(`echo $BASE_STRING | tr '.' ' '`)
            V_MAJOR=${BASE_LIST[0]}
            V_MINOR=${BASE_LIST[1]}
            V_PATCH=${BASE_LIST[2]}
            echo "Current version : $BASE_STRING"
            V_MINOR=$((V_MINOR + 1))
            V_PATCH=0
            SUGGESTED_VERSION="$V_MAJOR.$V_MINOR.$V_PATCH"
            echo "Enter a version number [$SUGGESTED_VERSION] "
            INPUT_STRING=$SUGGESTED_VERSION
            echo "Will set new version to be $INPUT_STRING"
            echo $INPUT_STRING > VERSION
            echo "Version $INPUT_STRING:" > tmpfile
            git log --pretty=format:" - %s" "v$BASE_STRING"...HEAD >> tmpfile
            echo "" >> tmpfile
            echo "" >> tmpfile
            cat CHANGES >> tmpfile
            mv tmpfile CHANGES
            export IMAGE_TAG=`echo $INPUT_STRING`
            git config --local user.email "puneetbharti@gmail.com"
            git config --local user.name "GitHub Action"
            git add CHANGES VERSION
            git commit -m "Version bump to $INPUT_STRING"
            git tag -a -m "Tagging version $INPUT_STRING" "v$INPUT_STRING"
            INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            remote_repo="https://${GITHUB_ACTOR}:${INPUT_GITHUB_TOKEN}@github.com/puneetbharti/go-lang-actions.git"
            git push "${remote_repo}" --tags

    - name: import packages 
      run: go get -u github.com/gorilla/mux
    - name: Build
      run: go build -v .

    - name: Setup ECR
      run: |
        # Login to AWS ECR
           $( aws ecr get-login --no-include-email )

    - name: Build and tag the image
      run: |
        # Build and tag the image
        docker build \
          -t $CONTAINER_IMAGE \
          -t $GITHUB_REPOSITORY:$GITHUB_SHA \
          -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE ":" $IMAGE_TAG  .
    - name: docker push the repo 
      run: | 
        # docker push repo to ecr 
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
